#!/bin/ruby

require_relative '../lib/linked_list'

list = LinkedList.new

%w[first second third fourth fith].each { |value| list.append(value) }
list.prepend('zeroth')

p list.to_s

puts "list is #{list.size} long"
puts "value at 2 is '#{list.at(2).value}'"
puts "value at 'third' is at #{list.find('third')}"
puts "does the list contain the value 'qwerty'? #{list.contains?('qwerty')}."
puts "does the list contain the value 'fourth'? #{list.contains?('fourth')}."
list.pop
puts 'pop'
p list.to_s
list.insert_at('i shouldnt be here!', 3)
p list.to_s
list.remove_at(3)
puts 'fixed'
p list.to_s
